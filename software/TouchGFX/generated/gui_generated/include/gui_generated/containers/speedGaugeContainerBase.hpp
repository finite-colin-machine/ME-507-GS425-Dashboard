/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SPEEDGAUGECONTAINERBASE_HPP
#define SPEEDGAUGECONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGBA2222.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class speedGaugeContainerBase : public touchgfx::Container
{
public:
    speedGaugeContainerBase();
    virtual ~speedGaugeContainerBase();
    virtual void initialize();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::BoxProgress speedBar7;
    touchgfx::CircleProgress speedBar6;
    touchgfx::PainterRGBA2222 speedBar6Painter;
    touchgfx::BoxProgress speedBar5;
    touchgfx::CircleProgress speedBar4;
    touchgfx::PainterRGBA2222 speedBar4Painter;
    touchgfx::BoxProgress speedBar3;
    touchgfx::CircleProgress speedBar2;
    touchgfx::PainterRGBA2222 speedBar2Painter;
    touchgfx::BoxProgress speedBar1;
    touchgfx::TextAreaWithOneWildcard speedTextDyn;
    touchgfx::TextArea MPH;
    touchgfx::TextArea _20;
    touchgfx::TextArea _40;
    touchgfx::TextArea _60;
    touchgfx::TextArea _80;
    touchgfx::TextArea _100;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SPEEDTEXTDYN_SIZE = 10;
    touchgfx::Unicode::UnicodeChar speedTextDynBuffer[SPEEDTEXTDYN_SIZE];

private:

};

#endif // SPEEDGAUGECONTAINERBASE_HPP
